Azure Functions = Event + Code
Azure Function App = Deployment Unit
Event = Scheduled Time OR Process a message or new items in blob storage OR HTTP Request or WebHook
App Service + Web Jobs
Azure Functions -
    - Simplified Programming model
            - Just the code to response to events
            - Eliminate bolierplate
            - Focus on business requirement
    - Consumption based pricing model
        - Pay as you go
        - Only pay for what you use
        - Automatic scale
    - Pricing Plans 
        - Run in a App-Service Plan
        - Or use the consumption Plan

    - Charged in 2 metrics (Billing model)
        - Number of executions
        - CPU Time (s) * RAM (GB) GbS

    - Free monthly grant 
        - 1,000,000 executions
        - 400,000 Gb-S

    Reduce your costs with 
        - Faster invocation times
        - Fewer invocations
        - Reduced memory requirements
    Consumption Plan 
        - Limited to 5 mins per execution
        - Optional maily daily quota
    Regular App Service Plan 
        - Pay for dedicated servers
        - Predictable monthly cost
        - Serveral pricing tiers of App Service
        - No Function duration constraints
    Azure Functions premium plan
        - Vnet Connectivity
        - Improved Performance

    Azue Function Pricing - 
        https://azure.microsoft.com/en-ca/pricing/details/functions/

    Azure Function Runtime is available as a docker container
        - Host anywhere

Benefits of Azure Functions
    Rapid and simple development 
        - Code within Azure portal
        - Eliminate bolier plate
    All the power of Azure Apps - CI, KUDU, Easy Auth, Certifcates, Custom Domains, Settings etc
    Cost-effective pricing 
        - Pay for what you use
    No servers to maintain and automatic scaling 

Serverless Architecture
    - Delegate the management of servers and Automatic Scaling ( FAAS - Function as a Service)
    - even wiring up of events is transparent for you

Azure Function lets you group together related functions together into Function Apps to share configuration settings and local resources



What are the Azue Function Use Case -
    - Experiments and prototyping
    - Automatic development process ( Use a web hook with a slack channed with CI)
    - Decomposing or extending monolithic application
https://www.troyhunt.com/azure-functions-in-practice/
    - Independent scaling
    - Adpater for integrating systems   
    - Go Serverless


A function will have input trigger but may have one or many bindings. Though Design principle states only one binding.

Deploying Function Apps
    Infrastructure 
        - App Service Plan
        - Storage Account
        - Application Insights
        - Function App
    Creating Infrastructure
        - Visual Studio
        - Azure portal
    Infrastrcuture as Code 
        - Azure CLI
        - ARM template

    Publishing function app 
        Manual Publishing 
            - Azure portal
            - Visual Studio
        Automatic Publishing
            - Publish zip with Kudu API
            - "Run from package"
            - Azure Function Core tools
            - Azure CLI
            - Azure DevOps
            - Cake (Build Automation of c#)
Workshop - 

func version
func 

code development too of Azure functions

Deploying Azure Functions using CLI

export resourcegroup="mriganka-rg"
az account list-locations -o tabl
export location="canadacentral"
az group create -n $resourcegroup -l $location
export storageAccount="mrigankastorage"
az storage account create -n mrigankastorage -g $resourcegroup -l $location --sku Standard_LRS
az resource create \
    --resource-group "mriganka-rg" \
    --resource-type "Microsoft.Insights/components" \
    --name "mrigankafunc" \
    --location "canadacentral" \
    --properties '{"Application_Type":"web"}'


az functionagitpp create --consumption-plan-location "canadacentral" --name "mrigankafunc" --resource-group "mriganka-rg" --runtime dotnet --storage-account "mrigankastorage" --functions-version

az functionapp config appsettings set --name "mrigankafunc" --resource-group "mriganka-rg" --settings "SendGridApiKey=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" "EmailSender=paul.mriganka@gmail.com"


Deploying Azure Functions Using ARM templates

az functionapp deployment source config-zip --name "mrigankafunc" --resource-group "mriganka-rg" --src publish.zip

Function Keys - 

    Authorization Levels
        Anonymous, Function, Admin
    Function Level Authorization
        Specific code per function
        "code" as query string parameters
        "x-function-key" HTTP Header
    Admin level Authorization
        - One code for all functions
    Manage keys in the Azure Function Portal 
        - Cycle revoke keys
        - Generate keys as per client
    Alternative way -
        Enable "Easy Auth"
            - Applies to the entire function app
            - Integrates with Azure AD, Google, Facebook and other
            - Redirects unauthorized uses to login page.
        Perform you validation - using JWT token
    Azure API Management Service in-front of Azure Function app
        - Offers many authorization features
        - Proxies traffic to your function app
    